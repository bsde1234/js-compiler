{"version":3,"sources":["components/Navbar.tsx","actions.ts","components/FileSection.tsx","components/CodeEditor.tsx","components/OutputDiv.tsx","components/MainScreen.tsx","App.tsx","reportWebVitals.ts","codeReducer.ts","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","appbar","backgroundColor","title","NavBar","classes","className","AppBar","Toolbar","Typography","variant","IconButton","onClick","id","uniqueString","console","log","Share","updateActiveFile","fileName","type","payload","filename","paddingLeft","FileSection","openFiles","useSelector","state","openEditors","dispatch","useDispatch","addFile","includes","updateOpenFiles","Paper","style","paddingTop","chip","borderBottomRightRadius","borderBottomLeftRadius","CodeEditor","useState","errors","updateErrors","activeFile","currentFiles","html","css","js","fileStruct","name","language","value","file","length","map","item","index","Chip","label","undefined","onDelete","delOpenFile","Divider","Grid","container","direction","height","defaultLanguage","path","onChange","e","v","defaultValue","onValidate","markers","component","fontWeight","overflowY","color","startColumn","startLineNumber","message","fontSize","OutputDiv","code","padding","srcDoc","border","overflow","alignContent","gridCol","width","margin","bgColor","MainScreen","spacing","marginTop","xs","App","createTheme","palette","primary","light","main","dark","secondary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","store","createStore","action","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0df57a8.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography, Theme, IconButton } from \"@material-ui/core\";\r\n// import { useDispatch } from \"react-redux\";\r\nimport { Share } from \"@material-ui/icons\";\r\nimport uniqueString from 'unique-string';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1\r\n        },\r\n        appbar: {\r\n            backgroundColor: \"#151515\"\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n    })\r\n)\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n    // const dispatch = useDispatch();\r\n    function handleShare() {\r\n        const id = uniqueString();\r\n        console.log(id);\r\n\r\n        // WIP: pastebin share api\r\n        \r\n        // fetch('https://pastebin.com/api/api_post.php', {\r\n        //     method: 'post',\r\n        //     body: {\r\n        //         api_dev_key: 'bfzBdc61ZmxE91cOb5PDxfhp8Ee4EPfQ'\r\n        //     }\r\n        // })\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.appbar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>DE-CODE</Typography>\r\n                    <IconButton onClick={handleShare}>\r\n                        <Share/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","// defining interface for all actions\r\ninterface HTMLAction {\r\n    type: \"UPDATE_HTML\", \r\n    payload: string\r\n}\r\n\r\ninterface JSAction {\r\n    type: \"UPDATE_JS\",\r\n    payload: string\r\n}\r\n\r\ninterface CSSUpdate {\r\n    type: \"UPDATE_CSS\",\r\n    payload: string\r\n}\r\n\r\ninterface OpenFilesAction {\r\n    type: \"UPDATE_OPEN_FILES\",\r\n    payload: string\r\n}\r\n\r\ninterface CloseFilesAction {\r\n    type: \"DELETE_OPEN_FILE\",\r\n    payload: string\r\n}\r\n\r\ninterface ActiveFileAction {\r\n    type: \"UPDATE_ACTIVE_FILE\",\r\n    payload: string\r\n}\r\n\r\ninterface ThemeAction {\r\n    type: \"UPDATE_THEME\",\r\n    payload: string\r\n}\r\n\r\nexport type Action = HTMLAction | JSAction | CSSUpdate | OpenFilesAction | CloseFilesAction | ActiveFileAction | ThemeAction\r\n\r\n\r\n// action functions to send the payload to the reducer\r\nexport const updateHtml = (htmlCode:string):Action => ({\r\n    type: \"UPDATE_HTML\",\r\n    payload: htmlCode\r\n})\r\n\r\nexport const updateCss = (cssCode:string):Action => ({\r\n    type: \"UPDATE_CSS\",\r\n    payload: cssCode\r\n})\r\n\r\nexport const updateJs = (jsCode:string):Action => ({\r\n    type: \"UPDATE_JS\",\r\n    payload: jsCode\r\n})\r\n\r\nexport const updateOpenFiles = (fileName: string):Action => ({\r\n    type: \"UPDATE_OPEN_FILES\",\r\n    payload: fileName\r\n})\r\n\r\nexport const delOpenFile = (fileName: string):Action => ({\r\n    type: \"DELETE_OPEN_FILE\",\r\n    payload: fileName\r\n})\r\n\r\nexport const updateActiveFile = (fileName: string):Action => ({\r\n    type: \"UPDATE_ACTIVE_FILE\",\r\n    payload: fileName\r\n})\r\n\r\nexport const updateTheme = (theme: string):Action => ({\r\n    type: \"UPDATE_THEME\",\r\n    payload: theme\r\n})","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Theme, Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { codeState } from \"../codeReducer\";\r\nimport { updateActiveFile, updateOpenFiles } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme:Theme) => \r\n    createStyles({\r\n        filename: {\r\n            backgroundColor: 'rgba(2, 0, 240, 0.05)',\r\n            paddingLeft: '5px',\r\n            '&:hover': {\r\n                backgroundColor: 'rgba(2, 0, 240, 0.1)',\r\n            }\r\n        },\r\n    })\r\n)\r\n\r\nexport default function FileSection() {\r\n    const openFiles = useSelector<codeState, codeState['openEditors']>((state)=>state.openEditors)\r\n\r\n    const dispatch = useDispatch();\r\n    const addFile = (fileName: string) => {\r\n        if(!openFiles.includes(fileName)) {\r\n            dispatch(updateOpenFiles(fileName));\r\n        }\r\n        dispatch(updateActiveFile(fileName))\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className=\"paper\">\r\n            <div>\r\n                <Typography variant=\"body1\" style={{paddingTop: '10px', paddingLeft: '5px'}}>Files</Typography>\r\n            </div>\r\n            <div onClick={() => addFile('index.html')}>\r\n                <Typography variant=\"body1\" className={classes.filename}>index.html</Typography>\r\n            </div>\r\n            <div onClick={() => addFile('index.css')}>\r\n                <Typography variant=\"body1\" className={classes.filename}>index.css</Typography>\r\n            </div>\r\n            <div onClick={() => addFile('index.js')}>\r\n                <Typography  variant=\"body1\" className={classes.filename}>index.js</Typography>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import { Typography, Paper, Chip, Divider, Theme, Grid } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {useState} from 'react';\r\nimport { delOpenFile, updateCss, updateHtml, updateJs, updateActiveFile } from \"../actions\";\r\nimport { codeState } from \"../codeReducer\";\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\nimport '../styles/CodeEditor.component.css';\r\n\r\nconst useStyles = makeStyles((theme:Theme) => \r\n    createStyles({\r\n        chip: {\r\n            backgroundColor: 'rgba(25, 0, 50, 0.2)',\r\n            borderBottomRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            \"&:hover\": {\r\n                backgroundColor: 'rgba(25, 0, 50, 0.3)'\r\n            },\r\n        }\r\n    })\r\n)\r\n\r\nexport default function CodeEditor() {\r\n    // Editor error message interface\r\n    interface errMsg {\r\n        code: string,\r\n        endColumn: Number,\r\n        endLineNumber: Number,\r\n        message: string,\r\n        startColumn: Number,\r\n        startLineNumber: Number\r\n    }\r\n    const [errors, updateErrors] = useState<errMsg[]>([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    // useSelector to get the redux variable\r\n    const activeFile = useSelector<codeState, codeState['activeFile']>((state) => state.activeFile)\r\n    const currentFiles = useSelector<codeState, codeState['openEditors']>((state)=> state.openEditors);\r\n    \r\n    const html = useSelector<codeState, codeState['html']>((state) => state.html)\r\n    const css = useSelector<codeState, codeState['css']>((state) => state.css)\r\n    const js = useSelector<codeState, codeState['js']>((state) => state.js)\r\n\r\n    interface fileDesc {\r\n        name: string,\r\n        language: string,\r\n        value: string\r\n    }\r\n\r\n    var fileStruct: { [fname: string]: fileDesc; } = { };\r\n    fileStruct[\"index.js\"]= {\r\n          name: \"index.js\",\r\n          language: \"javascript\",\r\n          value: js,\r\n    }\r\n    fileStruct[\"index.css\"]= {\r\n        name: \"script.css\",\r\n        language: \"css\",\r\n        value: css,\r\n    }\r\n    fileStruct[\"index.html\"]= {\r\n        name: \"script.html\",\r\n        language: \"html\",\r\n        value: html,\r\n    }\r\n\r\n    const file = fileStruct[activeFile]\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = (fileName:string) => {\r\n        dispatch(delOpenFile(fileName))\r\n    };\r\n\r\n    const logErrors = (markers:errMsg[]) => {\r\n        console.log(errors)\r\n        updateErrors(markers)\r\n    }\r\n\r\n    const handleClick = (fileName:string) => {\r\n        console.log(fileName)\r\n        dispatch(updateActiveFile(fileName))\r\n    };\r\n\r\n    const onUpdateContent = (value:string|undefined, content:any) => {\r\n        if(value) {\r\n            activeFile==='index.html'? \r\n                dispatch(updateHtml(value)) \r\n                : activeFile === 'index.css' ? \r\n                dispatch(updateCss(value)) \r\n                : dispatch(updateJs(value))\r\n        }\r\n    }\r\n    return (\r\n        <Paper className=\"paper\">\r\n            {currentFiles.length>0 ? \r\n                <>\r\n                    {currentFiles.map((item, index) => {\r\n                        return (\r\n                            <Chip className={classes.chip} key={index} label={item} onClick={()=>handleClick(item)} style={activeFile===item?{backgroundColor: 'rgba(25, 0, 50, 0.05)'}:undefined} onDelete={()=>handleDelete(item)}/>\r\n                        )\r\n                    })}\r\n                    <Divider />\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Editor\r\n                                height=\"65vh\"\r\n                                theme=\"vs-dark\"\r\n                                defaultLanguage={file.language}\r\n                                path={file.name}\r\n                                onChange={(e, v) => onUpdateContent(e,v)}\r\n                                defaultValue={file.value}\r\n                                onValidate={logErrors}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography component=\"p\" style={{fontWeight: 'bold', paddingLeft: '10px'}}>File errors</Typography>\r\n                            <Divider/>\r\n                            <div style={{overflowY: \"scroll\"}}>\r\n                            {errors.map(item => (\r\n                                <>\r\n                                    <Typography style={{fontWeight: 'bold', color: \"red\"}} component=\"span\">{item.startColumn}:{item.startLineNumber}</Typography>\r\n                                    <Typography style={{paddingLeft: '5px'}} component=\"span\">{item.message}</Typography>\r\n                                    <br/>\r\n                                </>\r\n                                )\r\n                            )}\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <TextField value={activeFile===\"index.html\"?html: activeFile===\"index.css\"?css:js} onChange={onUpdateContent} variant=\"outlined\" /> */}\r\n                </>\r\n            : \r\n            <div className=\"openEditorMessage\" >\r\n                <Typography variant=\"h6\">Open an Editor to start coding </Typography><CodeIcon className=\"icon\" fontSize=\"large\" />\r\n            </div>}\r\n        </Paper>\r\n    )\r\n}","import { Divider, Paper, Typography, Grid } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { codeState } from \"../codeReducer\";\r\n\r\n\r\nexport default function OutputDiv() {\r\n    //get redux states for html, css, js\r\n    const html = useSelector<codeState, codeState['html']>((state) => state.html)\r\n    const css = useSelector<codeState, codeState['css']>((state) => state.css)\r\n    const js = useSelector<codeState, codeState['js']>((state) => state.js)\r\n\r\n    // construct the html structure for the iframe, alternatively babel or webpack can be used to compile\r\n    var code = '<html lang=\"en\">';\r\n    code+='<head><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /><title>Document</title>';\r\n    code+=` <style>${css}</style>` \r\n    code+=`</head>`;\r\n    code+=`<body>${html}<br/><script>\\n${js}</script></body></html>`;\r\n\r\n    // WIP: console section\r\n\r\n    // console.stdlog = console.log.bind(console);\r\n    // console.logs = [];\r\n    // console.log = function(){\r\n    //     console.logs.push(Array.from(arguments));\r\n    //     console.stdlog.apply(console, arguments);\r\n    // }\r\n        \r\n    console.log(code);\r\n    return (\r\n        <Paper className=\"paper\">\r\n            <Typography variant=\"h6\" style={{padding: '2px 0px 2px 10px'}}>Output</Typography>\r\n            <Divider />\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <iframe srcDoc={code} title=\"output\" style={{ border: 'none', overflow: 'scroll', height: '64vh'}}/>\r\n                </Grid>\r\n                <Grid item alignContent=\"flex-end\">\r\n                    <Divider />\r\n                    <Typography component=\"span\" style={{fontWeight: 'bold', paddingLeft: '10px'}}>Console</Typography>\r\n                    <Divider/>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n","import { Grid, Theme } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FileSection from \"./FileSection\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport OutputDiv from \"./OutputDiv\";\r\n\r\nimport '../styles/MainScreen.component.css';\r\n\r\nconst useStyles = makeStyles((theme:Theme) => \r\n    createStyles({\r\n        gridCol: {\r\n            height: '90vh',\r\n            width: '100%',\r\n            margin: 0\r\n        },\r\n        bgColor: {\r\n            backgroundColor: '#252525'\r\n        }\r\n    })\r\n)\r\n\r\nexport default function MainScreen() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"row\" className={classes.gridCol} spacing={2} style={{marginTop: 70}}>\r\n            <Grid item xs={2}>\r\n                <FileSection />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <CodeEditor />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <OutputDiv />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';  \nimport {Route, Switch} from \"react-router-dom\";\nimport NavBar from './components/Navbar';\nimport MainScreen from './components/MainScreen';\n\nfunction App() {\n  const theme = createTheme({\n    palette: {\n      type: 'light',\n       primary: {\n          light: '#fff',\n          main: 'rgb(23, 105, 170)',\n          dark: 'rgb(25,25,25)'\n       },\n       secondary: {\n         main: '#f44336',\n         dark: 'rgb(25,25,25)'\n       },\n    },\n  });\n  return (\n    <Switch>\n    <MuiThemeProvider theme={theme}>\n      <Route path=\"/\">\n        <NavBar/>\n        <MainScreen />    \n      </Route>\n    </MuiThemeProvider>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from \"./actions\"\r\n\r\n// interface\r\nexport interface codeState {\r\n    html: string,\r\n    css: string,\r\n    js: string,\r\n    openEditors: string[],\r\n    activeFile: string,\r\n    theme: string\r\n}\r\n\r\n\r\n// initial state of the redux state object\r\nconst initalState = {\r\n    html: '<!-- No need include body or html tag, happy coding -->',\r\n    css: '/* CSS code goes here */',\r\n    js: '// Javascrip code',\r\n    openEditors: ['index.html'],\r\n    activeFile: 'index.html',\r\n    theme: 'light'\r\n}\r\n\r\n\r\n// using switch statement for different actions\r\nexport const codeReducer = (state:codeState = initalState, action: Action) => {\r\n    switch(action.type){\r\n        case \"UPDATE_HTML\":\r\n            return {...state, html: action.payload }\r\n        \r\n        case \"UPDATE_CSS\":\r\n            return {...state, css: action.payload}\r\n\r\n        case \"UPDATE_JS\":\r\n            return {...state, js: action.payload}\r\n\r\n        case \"UPDATE_OPEN_FILES\":\r\n            return {...state, openEditors: [...state.openEditors, action.payload]}\r\n\r\n        case \"DELETE_OPEN_FILE\":\r\n            return {...state, openEditors: state.openEditors.filter(e=>e!==action.payload)}\r\n\r\n        case \"UPDATE_ACTIVE_FILE\":\r\n            return {...state, activeFile: action.payload}\r\n\r\n        case \"UPDATE_THEME\":\r\n            return {...state, theme: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport { codeReducer } from \"./codeReducer\";\r\n\r\nexport const store = createStore(codeReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {store} from './store';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n    {/* using redux store from './store' */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}